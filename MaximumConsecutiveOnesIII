class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int res=0,left=0,right=0,zeros=0;//ZEROS TO STORE THE COUNT OF ZERO IN THE BINARY ARRAY 
        while(right<nums.size())//J<N
        {
            if(nums[right]==0)//IF NUMS[J]==0
                zeros++;//ZEROS++
            while(zeros>k)//IF IT EXCEEDS K THAT IS THE MAX NUMBER OF TIMES U CAN FLIP 0 TO 1 TO GET MAX SUBARRAY CONTAINING ALL 1S 
            {
                if(nums[left]==0)
                    zeros--;//AND IF NUMS[LEFT]==0 THEN DECREASE THE ZERO COUNT OF THE ARRAY AND 
                left++;//LEFT++
            }
            res=max(res,right-left+1);//MAX LENGHT OF SUCH SUBARRAY 
            right++;//J++
        }
        return res;
    }
};
